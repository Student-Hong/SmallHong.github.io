<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小宏同学</title>
  
  <subtitle>忠于开发的前端爱好者</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.superxiaohong.com/"/>
  <updated>2018-10-27T11:42:10.502Z</updated>
  <id>https://www.superxiaohong.com/</id>
  
  <author>
    <name>小宏同学</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>swoole+redis直播环境搭建</title>
    <link href="https://www.superxiaohong.com/2018/10/27/swoole-redis%E7%9B%B4%E6%92%AD%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://www.superxiaohong.com/2018/10/27/swoole-redis直播环境搭建/</id>
    <published>2018-10-27T11:42:10.000Z</published>
    <updated>2018-10-27T11:42:10.502Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>swoole环境安装</title>
    <link href="https://www.superxiaohong.com/2018/10/26/swoole%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
    <id>https://www.superxiaohong.com/2018/10/26/swoole环境安装/</id>
    <published>2018-10-26T09:34:12.000Z</published>
    <updated>2018-10-26T09:58:13.520Z</updated>
    
    <content type="html"><![CDATA[<p>小宏同学最近在学习过程中遇到了有关直播的问题，写此篇文章用来积累一下。本篇主要内容包括</p><ul><li>swoole环境配置安装<br>（想到的点会在下一篇有关swoole的文章补充。。）</li></ul><a id="more"></a><h4 id="一、什么是swoole？"><a href="#一、什么是swoole？" class="headerlink" title="一、什么是swoole？"></a>一、什么是swoole？</h4><p>这里就简单说了哈，swoole是php的一个扩展，用于即时通信的功能。想更多的了解概念性的问题，可以参考<a href="https://www.swoole.com/" target="_blank" rel="noopener">swoole官方文档</a>。</p><h4 id="二、swoole的简易安装过程"><a href="#二、swoole的简易安装过程" class="headerlink" title="二、swoole的简易安装过程"></a>二、swoole的简易安装过程</h4><h2 id="在安装之前呢，小宏同学要提醒大家，要先确保以下条件是否满足"><a href="#在安装之前呢，小宏同学要提醒大家，要先确保以下条件是否满足" class="headerlink" title="在安装之前呢，小宏同学要提醒大家，要先确保以下条件是否满足"></a>在安装之前呢，小宏同学要提醒大家，要先确保以下条件是否满足</h2><ul><li>php-7.2.0 或以上  因为swoole为4.2.3以上</li><li>gcc-4.4 或更高版本：rpm -qa|grep gcc</li><li>make ：rpm -qa|grep make</li><li>autoconf ：rpm -qa|grep autoconf</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;小宏同学最近在学习过程中遇到了有关直播的问题，写此篇文章用来积累一下。本篇主要内容包括&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;swoole环境配置安装&lt;br&gt;（想到的点会在下一篇有关swoole的文章补充。。）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="环境配置" scheme="https://www.superxiaohong.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="swoole" scheme="https://www.superxiaohong.com/tags/swoole/"/>
    
  </entry>
  
  <entry>
    <title>Js立即执行函数(转)</title>
    <link href="https://www.superxiaohong.com/2018/10/18/Js%E7%AB%8B%E5%8D%B3%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0/"/>
    <id>https://www.superxiaohong.com/2018/10/18/Js立即执行函数/</id>
    <published>2018-10-18T12:26:44.000Z</published>
    <updated>2018-10-26T09:57:58.857Z</updated>
    
    <content type="html"><![CDATA[<p>这是 JS 中的一个常见概念，面试时经常会被问到，请「用自己的语言」简述</p><ul><li>立即执行函数是什么</li><li>立即执行函数有什么用途</li></ul><a id="more"></a><h4 id="立即执行函数是什么"><a href="#立即执行函数是什么" class="headerlink" title="立即执行函数是什么"></a>立即执行函数是什么</h4><p>立即执行函数就是</p><ul><li>声明一个匿名函数</li><li>马上调用这个匿名函数</li></ul><p><img src="https://i.loli.net/2018/10/18/5bc882fa03875.png" alt="336056-20161011221635859-1560145581"></p><p>上面是一个典型的立即执行函数。</p><p>首先声明一个匿名函数 <code>function(){alert(&#39;我是匿名函数&#39;)}</code>。<br>然后在匿名函数后面接一对括号 ()，调用这个匿名函数。</p><p><strong>那么为什么还要用另一对括号把匿名函数包起来呢？</strong><br>其实是为了兼容 JS 的语法。</p><p>如果我们不加另一对括号，直接写成</p><p>function(){alert(‘我是匿名函数’)}()<br>浏览器会报语法错误。想要通过浏览器的语法检查，必须加点小东西，比如下面几种</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">( <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;() ) <span class="comment">// 用括号把整个表达式包起来</span></span><br><span class="line">( <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123; alert(<span class="string">'我是匿名函数'</span>)&#125; )() <span class="comment">//</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;() <span class="comment">// 求反，我们不在意值是多少，只想通过语法检查。</span></span><br><span class="line">+<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;()</span><br><span class="line">-<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;()</span><br><span class="line">~<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;()</span><br><span class="line"><span class="keyword">void</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;()</span><br><span class="line"><span class="keyword">new</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;()</span><br></pre></td></tr></table></figure><h4 id="立即执行函数有什么用？"><a href="#立即执行函数有什么用？" class="headerlink" title="立即执行函数有什么用？"></a>立即执行函数有什么用？</h4><p>只有一个作用：创建一个独立的作用域。<br>这个作用域里面的变量，外面访问不到（即避免「变量污染」）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是 JS 中的一个常见概念，面试时经常会被问到，请「用自己的语言」简述&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;立即执行函数是什么&lt;/li&gt;
&lt;li&gt;立即执行函数有什么用途&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="其他" scheme="https://www.superxiaohong.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="JS" scheme="https://www.superxiaohong.com/tags/JS/"/>
    
  </entry>
  
</feed>
