<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[swoole+redis直播环境搭建]]></title>
    <url>%2F2018%2F10%2F27%2F01%2F</url>
    <content type="text"><![CDATA[小宏同学最近在学习过程中遇到了有关直播的问题，写此篇文章用来积累一下。本篇主要内容包括 swoole环境配置安装 与redis的结合 Hello，艾维巴得，我是小宏童鞋，从今天起我的博客就正式开始啦，搭blog嘛，主要是为了我这只小菜鸟学习，还希望光顾我这的大佬们多多指教。好啦，废话不多说，开始阅读我的处女作吧。一、什么是swoole？这里就简单说了哈，swoole是php的一个扩展，用于即时通信的功能。想更多的了解概念性的问题，可以参考swoole官方文档。 二、swoole的简易安装过程在安装之前呢，小宏同学要提醒大家，要先确保以下条件是否满足 php-7.2.0 或以上 因为swoole为4.2.3以上 gcc-4.4 或更高版本：rpm -qa|grep gcc make ：rpm -qa|grep make autoconf ：rpm -qa|grep autoconf大家可以参考一下小宏同学提供的安装语句1yum -y install gcc gcc-c++ libxml2 libxml2-devel git autoconf telnet pcre-devel curl-devel 1,下载swoole包到根目录1wget https://github.com/swoole/swoole-src/archive/v4.2.3.tar.gz 2,解压并进入目录12tar zxf v4.2.3.tar.gzcd swoole-src-4.2.3/ 3,使用phpize生成php编译设置(根据自己服务器phpize所在目录运行，也可以尝试直接phpize)1/usr/bin/phpize 出现类似下列语句则表示成功1234Configuring for:PHP Api Version: 20121113Zend Module Api No: 20121212Zend Extension Api No: 220121212]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>swoole</tag>
        <tag>redis</tag>
        <tag>直播</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[swoole环境安装]]></title>
    <url>%2F2018%2F10%2F26%2Fswoole%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[小宏同学最近在学习过程中遇到了有关直播的问题，写此篇文章用来积累一下。本篇主要内容包括 swoole环境配置安装 与redis的结合 Hello，艾维巴得，我是小宏童鞋，从今天起我的博客就正式开始啦，搭blog嘛，主要是为了我这只小菜鸟学习，还希望光顾我这的大佬们多多指教。好啦，废话不多说，开始阅读我的处女作吧。一、什么是swoole？这里就简单说了哈，swoole是php的一个扩展，用于即时通信的功能。想更多的了解概念性的问题，可以参考swoole官方文档。 二、swoole的简易安装过程在安装之前呢，小宏同学要提醒大家，要先确保以下条件是否满足 php-7.2.0 或以上 因为swoole为4.2.3以上 gcc-4.4 或更高版本：rpm -qa|grep gcc make ：rpm -qa|grep make autoconf ：rpm -qa|grep autoconf]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>swoole</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Js立即执行函数(转)]]></title>
    <url>%2F2018%2F10%2F18%2FJs%E7%AB%8B%E5%8D%B3%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[这是 JS 中的一个常见概念，面试时经常会被问到，请「用自己的语言」简述 立即执行函数是什么 立即执行函数有什么用途 立即执行函数是什么立即执行函数就是 声明一个匿名函数 马上调用这个匿名函数 上面是一个典型的立即执行函数。 首先声明一个匿名函数 function(){alert(&#39;我是匿名函数&#39;)}。然后在匿名函数后面接一对括号 ()，调用这个匿名函数。 那么为什么还要用另一对括号把匿名函数包起来呢？其实是为了兼容 JS 的语法。 如果我们不加另一对括号，直接写成 function(){alert(‘我是匿名函数’)}()浏览器会报语法错误。想要通过浏览器的语法检查，必须加点小东西，比如下面几种 12345678( function()&#123;alert('我是匿名函数')&#125;() ) // 用括号把整个表达式包起来( function ()&#123; alert('我是匿名函数')&#125; )() //!function()&#123;alert('我是匿名函数')&#125;() // 求反，我们不在意值是多少，只想通过语法检查。+function()&#123;alert('我是匿名函数')&#125;()-function()&#123;alert('我是匿名函数')&#125;()~function()&#123;alert('我是匿名函数')&#125;()void function()&#123;alert('我是匿名函数')&#125;()new function()&#123;alert('我是匿名函数')&#125;() 立即执行函数有什么用？只有一个作用：创建一个独立的作用域。这个作用域里面的变量，外面访问不到（即避免「变量污染」）。]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
</search>
